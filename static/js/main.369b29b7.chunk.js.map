{"version":3,"sources":["assets/images/IMG_0029.jpg","assets/images/Dayplannerpic.jpeg","assets/images/Weather Dashboard.png","assets/images/the-sloshed-guide-screenshot.png","assets/images/Note-Taker.png","assets/images/Fitness-Tracker.png","assets/images/Budget-Tracker.png","Components/header/Header.js","Pages/About/About.js","Components/projectCard/projectCard.js","Utils/Projects.js","Components/projectContainer/projectContainer.js","Pages/Portfolio/Portfolio.js","Pages/Contact/Contact.js","Components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","About","src","require","alt","ProjectCard","title","description","liveLink","repoLink","screenshot","type","onClick","window","open","ProjectContainer","projects","ProjectData","map","project","key","id","Portfolio","Contact","url","target","Footer","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.369b29b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG_0029.8d988276.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dayplannerpic.d8c45fc4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Weather Dashboard.d9cb21ad.png\";","module.exports = __webpack_public_path__ + \"static/media/the-sloshed-guide-screenshot.813b686f.png\";","module.exports = __webpack_public_path__ + \"static/media/Note-Taker.3736770e.png\";","module.exports = __webpack_public_path__ + \"static/media/Fitness-Tracker.0733e01a.png\";","module.exports = __webpack_public_path__ + \"static/media/Budget-Tracker.a87c4fb6.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nfunction Header() {\n    return (\n        <div className='container-fluid'>\n            <div className='row'>\n                <div className='col-xs-12 col-sm-12 col-md-6 col-lg-4 col-xl-4 myName'>\n                    <h1>David Shober</h1>\n                </div>\n\n                <div className='\"col-xs-12 col-sm-12 col-md-6 col-lg-8 col-xl-8 navHeader'>\n                    <span className=\"navbar-brand mr-2 h1 text-dark navlink\"><Link to=\"/about\">About</Link></span>\n                    <span className=\"navbar-brand mr-2 h1 text-dark navlink\"><Link to=\"/portfolio\">Portfolio</Link></span>\n                    <span className=\"navbar-brand ml h1 text-dark navlink\"><Link to=\"/contact\">Contact</Link></span>\n                </div>\n                \n            </div>\n        </div>\n    )\n}\n            \n\n\n\n\nexport default Header;","import React from 'react';\n\nimport './styles.css';\n\n\nconst About = () => (\n    <div className='container-fluid'>\n        <h1 className='aboutMeHeader'>\n            About Me\n        </h1>\n        <div className='row'>\n            <div className='col-4'>\n                <img src={require('../../assets/images/IMG_0029.jpg')} alt=\"Me pic\"/>\n            </div>\n            <div className='col-8'>\n                <p>\n                My name is David Shober, I'm currently working at BioFire Diognostics LLC.  \"BioFire creates Comprehensive panels that take out the guess work, giving laboratories and healthcare providers a higher probability of identifying pathogens associated with infectious disease.\n                Designed with the syndromic approach in mind, each panel combines a broad grouping of probable pathogenic causes into a single, rapid test.\"\" I've worked for BioFire for two and a half years now. I currently live in Lake Point Utah,  I've lived here a little over a year.\n                </p>\n                <p>\n                My goal is to make a career change into web development, I really enjoy making web applications from scratch and seeing what I can create. Although very challenging, seeing the end result of a web application completed from start to finish is exciting. \n                </p>\n\n            </div>\n\n        </div>\n    </div>\n)\n\n\nexport default About;","import React from 'react';\nimport './styles.css';\n\nfunction ProjectCard({ title, description, liveLink, repoLink, screenshot }) {\n    return (\n        <div className=\"row cardBody\">\n            <div className=\"col col-lg-4\">\n                <img src={screenshot} alt=\"project screenshot\" className=\"screenshot\"/>\n            </div>\n            <div className=\"col col-lg-8 projectContent\">\n                    <h3>{title}</h3>\n                    <p>{description}</p>\n                <div className=\"project-btns\">\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={() => (window.open(liveLink, '_blank'))}>\n                        View Live Project\n                    </button>\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={() => (window.open(repoLink, '_blank'))}>\n                        View Project Repository\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectCard;","export default [\n    {\n        \"id\": 1,\n        \"title\": \"Day Planner\",\n        \"description\": \"A tool that allows users to plan their day by entering tasks and appointments into hourly blocks. Data persists in the browser through the use of local storage, with conditional formatting applied to indicate the current hour block.\",\n        \"liveLink\": \"https://shobes1421.github.io/Day-Planner/\",\n        \"repoLink\": \"https://github.com/Shobes1421/Day-Planner\",\n        \"screenshot\": require('../assets/images/Dayplannerpic.jpeg')\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Weather Dashboard\",\n        \"description\": \"An interactive appliction to allow users to search current and forecasted weather conditions by city.\",\n        \"liveLink\": \"https://shobes1421.github.io/Weather-Dashboard/\",\n        \"repoLink\": \"https://github.com/Shobes1421/Weather-Dashboard\",\n        \"screenshot\": require('../assets/images/Weather Dashboard.png')\n    },\n    {\n        \"id\": 3,\n        \"title\": \"The Sloshed Guide\",\n        \"description\": \"This application provides the user with results for bars and breweries and pulls in current weather conditions for that location.\",\n        \"liveLink\": \"https://ashtonwalden34.github.io/the-sloshed-guide/\",\n        \"repoLink\": \"https://github.com/ashtonwalden34/the-sloshed-guide\",\n        \"screenshot\": require('../assets/images/the-sloshed-guide-screenshot.png')\n    },\n    {\n        \"id\": 4,\n        \"title\": \"Note Taker\",\n        \"description\": \"This application allows users to create and delete notes through a simple input form comprised of a title and text body.\",\n        \"liveLink\": \"https://class-note-taker.herokuapp.com/\",\n        \"repoLink\": \"https://github.com/Shobes1421/Note-Taker\",\n        \"screenshot\": require('../assets/images/Note-Taker.png')\n    },\n    {\n        \"id\": 5,\n        \"title\": \"Fitness Tracker\",\n        \"description\": \"This application allows users to track workout information over time to better manage their workout schedule. Users can create new workouts, view previous workouts, and view cumulative statistics of their workout history.\",\n        \"liveLink\": \"https://fitness-tracks.herokuapp.com/\",\n        \"repoLink\": \"https://github.com/Shobes1421/Fitness-tracker\",\n        \"screenshot\": require('../assets/images/Fitness-Tracker.png')\n    },\n    {\n        \"id\": 6,\n        \"title\": \"Budget Tracker\",\n        \"description\": \"This application allows the user to create a budget.  They can add funds or subtract funds to fit their needs.\",\n        \"liveLink\": \"https://budget-tracks.herokuapp.com/\",\n        \"repoLink\": \"https://github.com/Shobes1421/Budget-Tracker\",\n        \"screenshot\": require('../assets/images/Budget-Tracker.png')\n    }\n]","import React from 'react';\nimport '../projectContainer/style.css'\nimport ProjectCard from '../projectCard/projectCard';\nimport ProjectData from '../../Utils/Projects';\n\nfunction ProjectContainer() {\n    const projects = ProjectData\n\n    return (\n        <div className='projects'>\n            <h2>Projects I've done</h2>\n            <div>\n                {projects.map(project => (\n                    <ProjectCard\n                        key={project.id}\n                        title={project.title}\n                        description={project.description}\n                        liveLink={project.liveLink}\n                        repoLink={project.repoLink}\n                        screenshot={project.screenshot}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectContainer;","import React from 'react'\nimport ProjectContainer from '../../Components/projectContainer/projectContainer'\nimport './styles.css'\n\n\nconst Portfolio = () => (\n    <div>\n    \n\n        <ProjectContainer />\n\n    </div>\n)\n\nexport default Portfolio;","import React from \"react\";\nimport { SocialIcon } from 'react-social-icons';\nimport \"./styles.css\"\n\nconst Contact = () => (\n<div className='centerText'>\n    <h1 className='contact'>CONTACT</h1>\n    <p>\n        Check me out on Linkedin, Github, or send me an email with the buttons below\n    </p>\n    <div className=\"row\">\n        < div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 socialIcon\">\n            <SocialIcon url=\"https://www.linkedin.com/feed/\" target=\"_blank\" />\n        </div>\n        <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 socialIcon\">\n            <SocialIcon url=\"https://github.com/Shobes1421\" target=\"_blank\" />\n        </div>\n        <div className=\"col-xs-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 socialIcon\">\n            <SocialIcon url=\"mailto:shobes1421@hotmail.com\" target=\"_blank\" />\n        </div>\n    </div>\n</div>\n);\n\nexport default Contact;\n","import React from 'react';\n\nimport './style.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"container-fluid navbar justify-content-center fixed-bottom\">\n            <p >Copyright &copy; 2020</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router, Route, } from 'react-router-dom';\n\nimport Header from './Components/header/Header';\nimport About from './Pages/About/About';\nimport Portfolio from './Pages/Portfolio/Portfolio';\nimport Contact from './Pages/Contact/Contact';\nimport Footer from './Components/footer/Footer';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div>\n        <Header />\n        </div>\n\n        \n          <Route exact path= '/about' component={About} />\n          <Route exact path= '/portfolio' component={Portfolio} />\n          <Route exact path= '/contact' component={Contact} />\n        \n          <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}